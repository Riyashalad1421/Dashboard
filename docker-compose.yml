services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  flink-jobmanager:
    build: ./flink_job
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - flink_tmp:/opt/flink/tmp
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2g
        reservations:
          cpus: '1.0'
          memory: 1g

  flink-taskmanager:
    build: ./flink_job
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 15
    restart: unless-stopped
    volumes:
      - flink_tmp:/opt/flink/tmp
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2g
        reservations:
          cpus: '1.0'
          memory: 1g

  flink-job:
    build: ./flink_job
    depends_on:
      - kafka
      - flink-jobmanager
      - kafka-producer
    command: >
      /bin/bash -c "
        echo '⏳ Waiting for Flink JobManager...'
        until curl -s http://flink-jobmanager:8081 > /dev/null; do
          sleep 2
        done

        echo '✅ Launching Flink job...'
        flink run -py /opt/flink/usrlib/taxi_stream.py --jobmanager flink-jobmanager:8081
      "
    restart: "no"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1g

  kafka-producer:
    build: ./producer
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    volumes:
      - ./producer/data:/app/data
    command: ["/bin/bash", "-c", "python kafka_producer.py"]
    restart: "no"

  fastapi-consumer:
    build:
      context: ./fastapi_consumer
      dockerfile: Dockerfile
    volumes:
      - ./fastapi_consumer:/app
    depends_on:
      - kafka
      - redis
    ports:
      - "8000:8000"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      REDIS_HOST: redis
      REDIS_PORT: 6379
    command: ["./wait-for-services.sh", "kafka:9092", "redis:6379", "uvicorn", "fastapi_kafka_consumer:app", "--host", "0.0.0.0", "--port", "8000"]
    restart: "no"
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1g
        reservations:
          cpus: '0.5'
          memory: 512m

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    restart: unless-stopped

  frontend:
    build:
      context: ./traffic-dashboard   # make sure this path points to your Next.js frontend
    ports:
      - "3000:3000"
    depends_on:
      - fastapi-consumer
    restart: unless-stopped

volumes:
  flink_tmp: